{
  "openapi": "3.0.1",
  "info": {
    "title": "5GLA Farm21 Integration Service",
    "description": "This service provides the integration of the Farm21 API with the 5GLA platform.",
    "version": "1.0.0"
  },
  "paths": {
    "/images/": {
      "post": {
        "tags": [
          "image-processing-controller"
        ],
        "description": "Processes an image from the mica sense camera.",
        "operationId": "images.process-image",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageProcessingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "The request is invalid.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageProcessingResponse"
                }
              }
            }
          },
          "200": {
            "description": "Image was processed successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ImageProcessingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/drone/register": {
      "post": {
        "tags": [
          "register-drone-controller"
        ],
        "description": "Registers a drone.",
        "operationId": "register-drone.register-drone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDroneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Drone was registered successfully."
          }
        }
      }
    },
    "/info/version": {
      "get": {
        "tags": [
          "info-controller"
        ],
        "description": "Fetch the version of the application.",
        "operationId": "info.version",
        "responses": {
          "200": {
            "description": "The version of the application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/images/{oid}": {
      "get": {
        "tags": [
          "image-processing-controller"
        ],
        "description": "Returns an image from the mica sense camera stored in the database.",
        "operationId": "images.get-image",
        "parameters": [
          {
            "name": "oid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The image was found and returned.",
            "content": {
              "image/tiff": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ImageProcessingRequest": {
        "required": [
          "base64Image",
          "droneId",
          "micaSenseChannel"
        ],
        "type": "object",
        "properties": {
          "droneId": {
            "type": "string",
            "description": "The id of the drone."
          },
          "micaSenseChannel": {
            "type": "string",
            "description": "The channel of the image.",
            "enum": [
              "BLUE",
              "GREEN",
              "RED",
              "RED_EDGE",
              "NIR"
            ]
          },
          "base64Image": {
            "type": "string",
            "description": "The base64 encoded tiff image."
          }
        },
        "description": "Request for image processing."
      },
      "ImageProcessingResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the response."
          },
          "oid": {
            "type": "string",
            "description": "The oid of the image."
          }
        },
        "description": "Response for image processing."
      },
      "RegisterDroneRequest": {
        "type": "object",
        "properties": {
          "droneId": {
            "type": "string",
            "description": "The id of the drone."
          }
        },
        "description": "Request for registering a drone."
      },
      "VersionResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the response."
          },
          "version": {
            "type": "string",
            "description": "The version."
          }
        },
        "description": "Response wrapper."
      }
    }
  }
}